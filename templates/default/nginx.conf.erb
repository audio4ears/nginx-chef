user  <%= node['nginx']['user'] %> <%= node['nginx']['group'] %>;
worker_processes  <%= @config['worker_processes'] ? @config['worker_processes'] : auto %>;
pid <%= node['nginx']['pid_path'] %>;

events {
    worker_connections  1024;
    multi_accept on;
    use epoll;
}


http {
    include       <%= node['nginx']['conf_dir'] %>/mime.types;
    default_type  application/octet-stream;

    # extend server_name char limit
    server_names_hash_bucket_size <%= @config['server_names_hash_bucket_size'] %>;

    # logging
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  off;
    #access_log  <%= node['nginx']['access_log_path'] %>  main;
    error_log  <%= node['nginx']['error_log_path'] %> crit;

    # optimize nginx
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;

    # set buffer limits
    client_max_body_size <%= @config['client_max_body_size'] %>;

    # cache metadata about files only
    open_file_cache max=200000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # turn off nginx version number displayed on all auto generated error pages
    server_tokens off;

    # set content-type charset
    charset UTF-8;

    # timeouts
    client_body_timeout 100;
    client_header_timeout 100;
    keepalive_timeout 100;
    send_timeout 300;

    # resolvers
    resolver  <%= @resolvers %>;

    # ngx_http_gzip_module
    gzip  on;
    gzip_comp_level 4;
    gzip_disable "msie6";
    gzip_min_length 256;
    gzip_proxied any;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    # ngx_http_proxy_module
    proxy_read_timeout 300;
    proxy_send_timeout 300;

    <% if @config['https_only'] -%>
    # redirect http to https
    server {
        listen 80;
        rewrite ^ https://$http_host$request_uri? permanent;
    }
    <% end -%>

    # load virtual host configs
    include <%= node['nginx']['conf_dir'] %>/sites-enabled/*;
}
